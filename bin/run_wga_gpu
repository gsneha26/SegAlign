#!/bin/bash

#custom error code
#4 - file not found
#5 - no permissions to create directory
#6 - error with LASTZ gapped extension

set -e

optionalArguments=""
ng=0

args=("$@")
for ((i=2; i < $#; i++))
    {
        optionalArguments="$optionalArguments ${args[$i]}"

        if [[ "$optionalArguments" == *"--nogapped"* ]]; then
            ng=1
        fi
    }

if [ $# -eq 1 ] || [ $# -eq 0 ] 
then
	wga $1
else
	refPath=$(readlink -f $1)
	queryPath=$(readlink -f $2)

  if [ ! -f "$refPath" ]; then
      1>&2 echo "target file $refPath does not exist"
      (exit 4)
  fi

  if [ ! -f "$queryPath" ]; then
      1>&2 echo "query file $queryPath does not exist"
      (exit 4)
  fi

	refChr=$(grep ">" $refPath | wc -l)
	queryChr=$(grep ">" $queryPath | wc -l)
	
  if [ ! -w $PWD ]; then
      1>&2 echo "Cannot create output directory in $PWD because of permissions"
      (exit 5)
  fi

  OUTPUT_FOLDER=$PWD/output_$RANDOM
  mkdir -p $OUTPUT_FOLDER

  if [ ! -w $OUTPUT_FOLDER ]; then
      1>&2 echo "Cannot create data directory in $OUTPUT_FOLDER because of permissions"
      (exit 5)
  fi

	DATA_FOLDER=$OUTPUT_FOLDER/data_$RANDOM/
	mkdir -p $DATA_FOLDER
	
	cd $DATA_FOLDER
  1>&2 echo "Converintg fasta files to 2bit format"
  faToTwoBit $refPath ref.2bit
  faToTwoBit $queryPath query.2bit

	
  1>&2 echo "Executing: \"wga $refPath $queryPath $DATA_FOLDER $optionalArguments\""
  time {
  pids=""
  count=0
  cd $OUTPUT_FOLDER
  while IFS= read -r line; do eval "$line" & pids="$pids $!"; count=$((count+1)); while [ $count -gt $(nproc) ]; do count=0; running=""; for pid in $pids; do if ps -p $pid > /dev/null; then count=$((count+1)); running="$running $pid"; fi; done; pids=$running; done; done < <(stdbuf -oL wga $refPath $queryPath $DATA_FOLDER $optionalArguments )
      wait $pids
  }

  rm -rf $DATA_FOLDER

  if [ $ng -eq 0 ]; then
      err_lines=$(cat *.err | wc -l)

      if [ $err_lines -gt 0 ]; then
          1>&2 echo ""
          1>&2 echo "Error in LASTZ process!"
          1>&2 cat *.err
          (exit 6)
      fi
  fi

  if [ $ng -eq 0 ]; then
      rm *.segments *.err
  fi
  cat tmp*
  rm -rf $OUTPUT_FOLDER

fi
