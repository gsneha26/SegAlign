#!/bin/bash

#custom error code
#4 - file not found
#5 - no permissions to create directory
#6 - error with LASTZ gapped extension
#7 - unable to open file
#9 - not enopugh allocated CPU DRAM
#10 - Requested GPUs greater than available GPUs
#11 - Error with cudaSetDevice in GPU part
#12 - Error with cudaMalloc in GPU part
#13 - Error with cudaMemcpy in GPU part
#14 - Error with cudaFree in GPU part

set -e

optionalArguments=""
optionalArguments1=""
output_filename=""
mk=0
hp=0
outf=0
total_args=0

args=("$@")

for ((i=0; i < $#; i++)){
  new_arg=`echo "${args[$i]}" | sed 's/=/ /'`
  optionalArguments1="$optionalArguments1 $new_arg"
}

split_args=( $optionalArguments1 )
total_args=${#split_args[@]}

for ((i=1; i < $#; i++)){
  if [[ "${args[$i]}" != *"--output"* ]]; then
    optionalArguments="$optionalArguments ${args[$i]}"
  else
    i=$(( i+1 ))
  fi
}

for ((i=0; i < $total_args; i++)){
  if [[ "${split_args[$i]}" == *"--output"* ]]; then
    outf=1
    output_filename=$(readlink -f ${split_args[$(($i+1))]})
  fi

  if [[ "${split_args[$i]}" == *"--markend"* ]]; then
    mk=1
  fi

  if [[ "${split_args[$i]}" == *"--help"* ]]; then
    hp=1
  fi

}

if [ $hp -eq 1 ]; then
  segalign_repeat_masker --help

elif [ $# -eq 0 ]; then
  segalign_repeat_masker $1

else
  refPath=$(readlink -f $1)

  if [ ! -f "$refPath" ]; then
    1>&2 echo "target file $refPath does not exist"
    (exit 4)
  fi

  if [ ! -w $PWD ]; then
    1>&2 echo "Cannot create output directory in $PWD because of permissions"
    (exit 5)
  fi

  OUTPUT_FOLDER=$PWD/output_$RANDOM
  mkdir -p $OUTPUT_FOLDER

  if [ ! -w $OUTPUT_FOLDER ]; then
    1>&2 echo "Cannot create data directory in $OUTPUT_FOLDER because of permissions"
    (exit 5)
  fi

  1>&2 echo ""
  1>&2 echo "Executing: \"segalign_repeat_masker $refPath $optionalArguments\""

  cd $OUTPUT_FOLDER
    
  time segalign_repeat_masker $refPath $optionalArguments

  if [ $outf -eq 1 ]; then

      > $output_filename

      echo "#name1  zstart1 end1  name2 zstart2+  end2+" >> $output_filename

      for filename in `for i in tmp*.*; do echo $i; done | sort -V`; do cat $filename>> $output_filename; done

      if [ $mk -eq 1 ] ; then
          echo "# segalign_repeat_masker end-of-file" >> $output_filename
      fi

      rm -rf $OUTPUT_FOLDER

  fi

fi
